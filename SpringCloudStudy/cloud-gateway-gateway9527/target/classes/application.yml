server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          # uri: http://localhost:8001          #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/get/**,/payment/lb**         # 断言，路径相匹配的进行路由
#            - After=2021-07-30T02:07:34.193+08:00[Asia/Shanghai] # 断言，在时间段之后匹配的进行路由
#            - Before=2021-07-30T02:07:34.193+08:00[Asia/Shanghai] # 断言，在时间段之前匹配的进行路由
#            - Between=2021-07-30T02:07:34.193+08:00[Asia/Shanghai],2021-07-30T03:07:34.193+08:00[Asia/Shanghai] # 断言，在两个时间段之间匹配的进行路由
#            - Cookie=username,xjh # 请求携带符合的cookie值的进行路由
#            - Header=X-Request-Id, \d+  # 请求头要有X-Request-Id属性并且值为整数的正则表达式
#            - Host=**.atguigu.com
#            - Method=GET
#            - Query=username, \d+  # 要有参数名username并且值还要是整数才能路由

#        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          # uri: http://localhost:8001          #匹配后提供服务的路由地址
#          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
#          predicates:
#            - Path=/payment/lb/**         # 断言，路径相匹配的进行路由

eureka:
  instance:
    hostname: cloud-gateway-service
  client: #服务提供者provider注册进eureka服务列表内
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka